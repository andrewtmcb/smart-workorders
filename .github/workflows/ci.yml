name: SmartOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run backend tests
        run: |
          # The -m flag runs tests without a specific path.
          pytest backend/

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Run frontend tests with coverage
        working-directory: frontend
        run: npm run test:coverage

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Build and tag frontend Docker image
        run: |
          docker build -t frontend:latest ./frontend
          docker tag frontend:latest your-docker-registry/frontend:latest # Pushing to registry will be a separate step

  workflow-demo:
    name: Workflow Demo
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Playwright + deps
        run: |
          npm init -y
          npm install -D @playwright/test
          npx playwright install --with-deps

      - name: Run Playwright tests with video
        run: |
          npx playwright test --reporter=html --output=test-results

      - name: Convert video to GIF (first test as demo)
        run: |
          sudo apt-get update && sudo apt-get install -y ffmpeg
          mkdir -p docs
          ffmpeg -i $(find test-results -name "*.webm" | head -n 1) \
            -vf "fps=10,scale=640:-1:flags=lanczos" docs/workflow.gif

      - name: Upload artifacts (Playwright report + GIF)
        uses: actions/upload-artifact@v3
        with:
          name: demo-artifacts
          path: |
            test-results/
            docs/workflow.gif
