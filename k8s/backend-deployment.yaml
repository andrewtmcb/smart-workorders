apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DATABASE_PORT
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_PASSWORD
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_NAME
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: backend-db-secret
                  key: DATABASE_NAME
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          emptyDir: {}
